Если есть иерархия байтовых потоков ввода-вывода, основанная на абстрактных классах 
InputStream и OutputStream, то зачем дополнительные иерархии, основанные на абстрактных 
классах Reader и Writer? 
Иерархии InputStream/OutputStream и Reader/Writer в Java различаются тем, что первые 
работают с байтовыми данными (например, изображениями или аудио), 
а вторые — с текстовыми данными. Классы Reader и Writer предоставляют удобные методы 
для работы с символами и кодировками, автоматически преобразуя байты в символы, что 
упрощает работу с текстом и избавляет от необходимости вручную обрабатывать кодировки. 
В то время как байтовые потоки остаются полезными для работы с двоичными данными, 
символьные потоки оптимизированы для работы с текстом.